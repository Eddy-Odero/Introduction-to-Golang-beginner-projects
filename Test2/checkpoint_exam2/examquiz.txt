1.Write a program that displays a z on the standard output (and nothing else)
2.Write a function that takes a string as an argument and returns the letter G if the argument length is less than 3, otherwise returns Invalid Input followed by a newline \n.

If it's an empty string return G followed by a newline \n.
Expected function
func PrintIfNot(str string) string {

}
Usage
Here is a possible program to test your function:

package main

import (
	"fmt"
)

func main() {
	fmt.Print(PrintIfNot("abcdefz"))
	fmt.Print(PrintIfNot("abc"))
	fmt.Print(PrintIfNot(""))
	fmt.Print(PrintIfNot("14"))
}
And its output:

$ go run . | cat -e
Invalid Input$
Invalid Input$
G$
G$
3.Write a function DigitLen() that takes two integers as arguments and returns the times the first int can be divided by the second until it reaches zero.

The second int must be between 2 and 36. If not, the function returns -1.
If the first int is negative, reverse the sign and count the digits.
Expected function
func DigitLen(n, base int) int {

}
Usage
Here is a possible program to test your function:

package main

import (
	"fmt"
)

func main() {
	fmt.Println(DigitLen(100, 10))
	fmt.Println(DigitLen(100, 2))
	fmt.Println(DigitLen(-100, 16))
	fmt.Println(DigitLen(100, -1))
}
And its output:

$ go run . | cat -e
3$
7$
2$
-1$